name: Deploy Microservices

on:
  push: 
    branches:
      - main
  workflow_dispatch: 

jobs:
  deploy-book-catalog:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW }}
      SERVICE_NAME: book_catalog

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: ./scripts/build-image.sh
        env:
          DOCKERFILE_PATH: ./book_catalog/Dockerfile
          IMAGE_NAME: ${{ env.CONTAINER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.VERSION }}

      - name: Publish
        run: ./scripts/push-image.sh
        env:
          IMAGE_NAME: ${{ env.CONTAINER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.VERSION }}

      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2
      
      - name: Deploy
        run: ./scripts/deploy.sh
        env:
          IMAGE_NAME: ${{ env.CONTAINER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.VERSION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  deploy-inventory-management:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW }}
      SERVICE_NAME: inventory_management

    steps:
      - uses: actions/checkout@v3

      - name: Build
        run: ./scripts/build-image.sh
        env:
          DOCKERFILE_PATH: ./inventory_management/Dockerfile
          IMAGE_NAME: ${{ env.CONTAINER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.VERSION }}

      - name: Publish
        run: ./scripts/push-image.sh
        env:
          IMAGE_NAME: ${{ env.CONTAINER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.VERSION }}

      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2
      
      - name: Deploy
        run: ./scripts/deploy.sh
        env:
          IMAGE_NAME: ${{ env.CONTAINER_REGISTRY }}/${{ env.SERVICE_NAME }}:${{ env.VERSION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
